name: Integration Test MEAN App

on:
  workflow_run:
    workflows: ["Docker Build and Push CI/CD"]  # Exact name of your build workflow
    types:
      - completed

jobs:
  integration-test:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set lowercase repository owner
        run: echo "OWNER_LOWER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set image tag environment variable
        run: echo "IMAGE=ghcr.io/${{ env.OWNER_LOWER }}/mean-app:${{ github.event.workflow_run.head_commit.id }}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create custom Docker network
        run: |
          docker network create mean-test-network || echo "Network already exists"

      - name: Pull Docker image
        run: docker pull ${{ env.IMAGE }}

      - name: Run MEAN app container
        run: |
          docker run --rm -d \
            --name mean-app \
            --network mean-test-network \
            -p 3000:3000 \
            ${{ env.IMAGE }}

      - name: Wait for app to be healthy
        run: |
          echo "Waiting for MEAN app to start..."
          for i in {1..30}; do
            if curl -sSf http://localhost:3000/api/health; then
              echo "App is healthy!"
              exit 0
            fi
            echo "Waiting for app... ($i)"
            sleep 5
          done
          echo "App did not start in time"
          echo "== App container logs =="
          docker logs mean-app || echo "No logs found"
          exit 1

      - name: Stop app container
        if: always()
        run: |
          echo "Stopping app container..."
          docker stop mean-app || echo "Container already stopped"

      - name: Show MongoDB container logs (if needed)
        if: failure()
        run: |
          echo "MongoDB logs for debugging:"
          docker logs $(docker ps -aqf "ancestor=mongo:5") || echo "No MongoDB logs found"

      - name: Show MEAN app container logs (if needed)
        if: failure()
        run: |
          echo "MEAN app logs for debugging:"
          docker logs mean-app || echo "No logs found"
